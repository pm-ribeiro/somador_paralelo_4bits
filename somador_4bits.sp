* This description was generated by JELIS
.include NMOS_VTG.inc
.include PMOS_VTG.inc

V0 gnd 0 DC 0V
V1 vdd 0 DC 3.3V

* entradas -> Não sei se está correto
Vin1 a 		gnd pulse 	(0 3.3 0 0.1ns 0.1ns 5n 10.2n)
Vin2 b 		gnd pulse 	(0 3.3 0 0.1ns 0.1ns 10.1n 20.4n)
Vin3 cin 	gnd pulse 	(0 3.3 0 0.1ns 0.1ns 20.3n 40.8n)


**---------------------------------------------------------------------------
**subckt da saida do meio somador
**s0 = !a*b + a*!b

.SUBCKT saida_MS a b out vcc gnd
*.PININFO a:I b:I out:O vcc:P gnd:G
*.EQN out=((!a * b) + (a * !b));
MP1 out a pu_n1 vcc PMOS
MP2 out not_a pu_n3 vcc PMOS
MP3 pu_n1 not_b vcc vcc PMOS
MP4 pu_n3 b vcc vcc PMOS
MN5 out not_a pd_n1 gnd NMOS
MN6 out a pd_n3 gnd NMOS
MN7 pd_n1 not_b gnd gnd NMOS
MN8 pd_n3 b gnd gnd NMOS
MP_inv9 not_a a vcc vcc PMOS
MN_inv10 not_a a gnd gnd NMOS
MP_inv11 not_b b vcc vcc PMOS
MN_inv12 not_b b gnd gnd NMOS
.ENDS saida_MS


**---------------------------------------------------------------------------
** subckt do c1 do meio somador
**c1 é o cout do meio somador
**c1 = a*b 

.SUBCKT c_MS a b not_out vcc gnd
*.PININFO a:I b:I not_out:O vcc:P gnd:G
*.EQN not_out=!(!a + (a * !b));
MP1 out a vcc vcc PMOS
MP2 out not_a pu_n3 vcc PMOS
MP3 pu_n3 b vcc vcc PMOS
MN4 out a pd_n1 gnd NMOS
MN5 pd_n1 b gnd gnd NMOS
MP_inv6 not_a a vcc vcc PMOS
MN_inv7 not_a a gnd gnd NMOS
MP_inv8 not_out out vcc vcc PMOS
MN_inv9 not_out out gnd gnd NMOS
.ENDS c_MS

**---------------------------------------------------------------------------
**subckt do c_out do somador completo
**c_out são os carry outs dos somadores completos
**cout = a*b + a*cin + b*cin

.SUBCKT c_SC a b cin not_out vcc gnd
*.PININFO a:I b:I cin:I not_out:O vcc:P gnd:G
*.EQN not_out=!((!cin * !a) + (!b * a * !cin) + (!b * cin * !a));
MP1 out a pu_n1 vcc PMOS
MP2 out not_a pu_n3 vcc PMOS
MP3 pu_n1 cin vcc vcc PMOS
MP4 pu_n1 not_cin pu_n5 vcc PMOS
MP5 pu_n5 b vcc vcc PMOS
MP6 pu_n3 cin pu_n5 vcc PMOS
MN7 out not_a pd_n1 gnd NMOS
MN8 out a pd_n3 gnd NMOS
MN9 pd_n1 cin pd_n4 gnd NMOS
MN10 pd_n4 b gnd gnd NMOS
MN11 pd_n3 not_cin pd_n4 gnd NMOS
MN12 pd_n3 cin gnd gnd NMOS
MP_inv13 not_a a vcc vcc PMOS
MN_inv14 not_a a gnd gnd NMOS
MP_inv15 not_cin cin vcc vcc PMOS
MN_inv16 not_cin cin gnd gnd NMOS
MP_inv17 not_out out vcc vcc PMOS
MN_inv18 not_out out gnd gnd NMOS
.ENDS c_SC


**---------------------------------------------------------------------------
** subckt da saida do somador completo
**s = cin XOR a XOR b

.SUBCKT saida_SC a b cin out vdd gnd
*.PININFO a:I b:I cin:I out:O vdd:P gnd:G
*.EQN out=((b * !cin * !a) + (!b * cin * !a) + (b * cin * a) + (!b * !cin * a));
MP1 out a pu_n1 vdd PMOS
MP2 out not_a pu_n3 vdd PMOS
MP3 pu_n1 cin pu_n4 vdd PMOS
MP4 pu_n1 not_cin pu_n5 vdd PMOS
MP5 pu_n4 not_b vdd vdd PMOS
MP6 pu_n5 b vdd vdd PMOS
MP7 pu_n3 cin pu_n5 vdd PMOS
MP8 pu_n3 not_cin pu_n4 vdd PMOS
MN9 out not_a pd_n1 gnd NMOS
MN10 out a pd_n3 gnd NMOS
MN11 pd_n1 not_cin pd_n4 gnd NMOS
MN12 pd_n1 cin pd_n5 gnd NMOS
MN13 pd_n4 not_b gnd gnd NMOS
MN14 pd_n5 b gnd gnd NMOS
MN15 pd_n3 not_cin pd_n5 gnd NMOS
MN16 pd_n3 cin pd_n4 gnd NMOS
MP_inv17 not_a a vdd vdd PMOS
MN_inv18 not_a a gnd gnd NMOS
MP_inv19 not_b b vdd vdd PMOS
MN_inv20 not_b b gnd gnd NMOS
MP_inv21 not_cin cin vdd vdd PMOS
MN_inv22 not_cin cin gnd gnd NMOS
.ENDS saida_SC


*Xnumero entrada(s) saida(s) vcc gnd nome da celula
X1 a0 b0 s0 vdd gnd saida_MS 	**S0
X2 a0 b0 c0 vdd gnd c_MS			**C0

X3 a1 b1 c0 s1 vdd gnd saida_SC	**saida = s1 do full adder
X4 a1 b1 c0 c1 vdd gnd c_SC 		**c1 do full adder

X5 a2 b2 c1 s2 vdd gnd saida_SC	**saida = s2 do full adder
X6 a2 b2 c1 c2 vdd gnd c_SC 		**c2 do full adder

X7 a3 b3 c2 s3 vdd gnd saida_SC	**saida = s3 do full adder
X8 a3 b3 c2 c3 vdd gnd c_SC 		**c3 do full adder

**---------------------------------------------------------------------------
** só copiei do inversor de exemplo do ava
.tran 1ps 8n

.measure tran pHL_inv 	trig v(in)  	val=0.5 		rise = 1 
+               		  	targ v(out) 	val=0.5     fall = 1		
	 
.measure tran pLH_inv 	trig v(in) 	 	val=0.5 		fall = 1 
+                    	targ v(out) 	val=0.5     rise = 1

.measure tran consumoCaso1_HL integ 'p(vcc)*(3-1.1)' from=1.1N to=3N
.measure tran consumoCaso1_LH integ 'p(vcc)*(5-3.1)' from=3.1N to=5N
*.measure tran consumoCaso1_HL integ 'p(vcc)*(fimIntervJan1-inicioIntervJan1)' from=3.1N to=5N

.param length = '50n'

.param InvWp = '0.1u * 1.5'
.param InvWn = '0.1u'

.print v(in) v(out) i(vcc)